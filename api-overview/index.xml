<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API Overview on Farmer</title><link>https://compositionalit.github.io/farmer/api-overview/</link><description>Recent content in API Overview on Farmer</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 05 Feb 2020 08:53:46 +0100</lastBuildDate><atom:link href="https://compositionalit.github.io/farmer/api-overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating templates</title><link>https://compositionalit.github.io/farmer/api-overview/template-generation/</link><pubDate>Wed, 05 Feb 2020 09:13:36 +0100</pubDate><guid>https://compositionalit.github.io/farmer/api-overview/template-generation/</guid><description>Farmer supports several ways to &amp;ldquo;output&amp;rdquo; ARM templates.
Generating JSON as a string You can generate an ARM template as a plain string:
let json = deployment.Template |&amp;gt; Writer.toJson // prints out the JSON printfn &amp;#34;%s&amp;#34; json Writing to a file You can write out the ARM template directly to a file, from which you can then deploy to Azure using whichever mechanism you already use e.g. Azure CLI, Powershell, REST API etc.</description></item><item><title>ARM Expressions</title><link>https://compositionalit.github.io/farmer/api-overview/expressions/</link><pubDate>Wed, 05 Feb 2020 09:13:36 +0100</pubDate><guid>https://compositionalit.github.io/farmer/api-overview/expressions/</guid><description>ARM template expressions are a way of safely storing string values which contain expressions that are evaluated at deployment time by the Azure. ARM expressions can also contain a set of predefined functions supported by the ARM runtime. They can be passed back as outputs and used further downstream
Farmer understands how to use ARM expressions and provides functionality to correctly wrap and unwrap them as raw strings into a JSON template.</description></item><item><title>Parameters and Variables</title><link>https://compositionalit.github.io/farmer/api-overview/parameters/</link><pubDate>Wed, 05 Feb 2020 09:13:36 +0100</pubDate><guid>https://compositionalit.github.io/farmer/api-overview/parameters/</guid><description>ARM templates support the idea both of parameterisation of templates and of the use of variables within a template for e.g. placeholders and re-using values.
Farmer, by design, has only limited support for parameters and no support for variables. We don&amp;rsquo;t plan on adding rich support for either of these for the following reasons:
We want to keep the Farmer codebase simple for maintainers We want to keep the Farmer API simple for users We want to keep the generated ARM templates as readable as possible We feel that instead of trying to embed conditional logic and program flow directly inside ARM templates in JSON, if you wish to parameterise your template that you should use a real programming language to do that: in this case, F#.</description></item><item><title>Dependencies</title><link>https://compositionalit.github.io/farmer/api-overview/dependencies/</link><pubDate>Sat, 22 Aug 2020 09:13:36 +0100</pubDate><guid>https://compositionalit.github.io/farmer/api-overview/dependencies/</guid><description>ARM resources can depend on one another, and Farmer caters for this as well. Dependencies guarantee that when resources are created, Azure will provision them in the correct order so that e.g. a storage account is created before Azure tries to grab the storage account key / connection string for your web app setting.
Much of this work is done for you:
Farmer creates multiple resources for you at the builder level, and will ensure that the appropriate dependencies are set for you - for example, when creating a SQL Azure instance, Farmer will automatically ensure that the database depends on the server.</description></item><item><title>Outputs</title><link>https://compositionalit.github.io/farmer/api-overview/outputs/</link><pubDate>Sat, 22 Aug 2020 09:13:36 +0100</pubDate><guid>https://compositionalit.github.io/farmer/api-overview/outputs/</guid><description>ARM templates also support the notion of outputs. Outputs can be used to provide your Farmer applications with values which were generated during the deployment process, to be used further downstream.
For example, you may wish to prime an Azure storage account with data post-creation. In this case, one way is to return back out the connection string of the storage account and use that to connect and upload your data.</description></item></channel></rss>